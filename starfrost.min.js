/**
 * StarFrost
 * (c) 2025 StarsX Studio
 * Released under the MIT License.
 */
// 主题切换功能
document.addEventListener('DOMContentLoaded', function() {
  const themeToggle = document.getElementById('themeToggle');
  const themeIcon = document.getElementById('themeIcon');
  const htmlElement = document.documentElement;
  
  // 检查本地存储或系统偏好
  const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)');
  const savedTheme = localStorage.getItem('sf-theme');
  
  if (savedTheme === 'dark' || (!savedTheme && prefersDarkScheme.matches)) {
    htmlElement.classList.add('sf-theme-dark');
    if(themeIcon) themeIcon.className = 'fas fa-sun';
  }
  
  if(themeToggle) {
    themeToggle.addEventListener('click', () => {
      htmlElement.classList.toggle('sf-theme-dark');
      
      if (htmlElement.classList.contains('sf-theme-dark')) {
        if(themeIcon) themeIcon.className = 'fas fa-sun';
        localStorage.setItem('sf-theme', 'dark');
        createToast('已切换到深色模式', 'primary');
      } else {
        if(themeIcon) themeIcon.className = 'fas fa-moon';
        localStorage.setItem('sf-theme', 'light');
        createToast('已切换到亮色模式', 'success');
      }
    });
  }
  
  // 初始化时显示
  setTimeout(() => {
    createToast('欢迎使用 starfrost CSS 框架！开始创作你的程序吧~', 'primary');
  }, 1000);
});
function createToast(message, type) {
  const toastContainer = document.getElementById('toastContainer');
  if(!toastContainer) return;
  
  const toast = document.createElement('div');
  toast.className = `sf-toast sf-toast-${type}`;
  
  const iconMap = {
    'primary': 'ℹ️',
    'success': '✅',
    'danger': '❌'
  };
  
  toast.innerHTML = `
    <span class="sf-toast-icon">${iconMap[type] || 'ℹ️'}</span>
    <div>
      <strong>${type === 'primary' ? '信息' : type === 'success' ? '成功' : '错误'}</strong>
      <p>${message}</p>
    </div>
    <button class="sf-toast-close">&times;</button>
  `;
  
  toastContainer.appendChild(toast);
  setTimeout(() => {
    toast.classList.add('show');
  }, 10);
  setTimeout(() => {
    toast.classList.remove('show');
    toast.classList.add('hide');
    setTimeout(() => {
      toast.remove();
    }, 300);
  }, 5000);
  const closeBtn = toast.querySelector('.sf-toast-close');
  closeBtn.addEventListener('click', () => {
    toast.classList.remove('show');
    toast.classList.add('hide');
    
    setTimeout(() => {
      toast.remove();
    }, 300);
  });
}
document.addEventListener('DOMContentLoaded', function() {
  document.querySelectorAll('.copy-btn').forEach(button => {
    button.addEventListener('click', function() {
      const codeBlock = this.parentElement.querySelector('pre');
      if(!codeBlock) return;
      
      const textToCopy = codeBlock.textContent;
      
      navigator.clipboard.writeText(textToCopy).then(() => {
        const originalText = this.textContent;
        this.textContent = '✓ 已复制';
        
        setTimeout(() => {
          this.textContent = originalText;
        }, 2000);
      }).catch(err => {
        console.error('复制失败:', err);
      });
    });
  });
  const showThemeInfo = document.getElementById('showThemeInfo');
  if(showThemeInfo) {
    showThemeInfo.addEventListener('click', () => {
      createToast('点击右上角图标可切换深色/浅色模式', 'primary');
    });
  }
  const modal = document.getElementById('exampleModal');
  const showModalBtn = document.getElementById('showModal');
  const closeModalBtn = document.getElementById('closeModal');
  const cancelModalBtn = document.getElementById('cancelModal');
  
  if(showModalBtn) {
    showModalBtn.addEventListener('click', () => {
      if(modal) modal.classList.add('show');
    });
  }
  
  if(closeModalBtn) {
    closeModalBtn.addEventListener('click', () => {
      if(modal) modal.classList.remove('show');
    });
  }
  
  if(cancelModalBtn) {
    cancelModalBtn.addEventListener('click', () => {
      if(modal) modal.classList.remove('show');
    });
  }
  
  if(modal) {
    modal.addEventListener('click', (e) => {
      if (e.target === modal) {
        modal.classList.remove('show');
      }
    });
  }
  const sidebar = document.getElementById('sidebar');
  const sidebarToggle = document.getElementById('sidebarToggle');
  
  if(sidebarToggle) {
    sidebarToggle.addEventListener('click', () => {
      if(sidebar) sidebar.classList.toggle('show');
    });
  }
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();
      
      const targetId = this.getAttribute('href');
      if(targetId === '#') return;
      
      const targetElement = document.querySelector(targetId);
      if (targetElement) {
        targetElement.scrollIntoView({
          behavior: 'smooth'
        });
      }
    });
  });
});
